name: Run Tests

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: core_banking
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Install dependencies
      run: npm install
      working-directory: ./backend

    - name: Wait for MySQL to be ready
      run: |
        until mysqladmin ping -h "127.0.0.1" --silent; do
          echo 'waiting for mysql to be ready...'
          sleep 5
        done

    - name: Run tests
      env:
        DB_HOST: 127.0.0.1
        DB_USER: root
        DB_PASSWORD: root
        DB_NAME: core_banking
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        EMAIL_USER: ${{ secrets.EMAIL_USER }}
        EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
      run: npm test
      working-directory: ./backend

    - name: Wait for environment to be ready
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
      run: |
        until [ "$(aws elasticbeanstalk describe-environments --application-name BankApp --environment-names your-environment-name --query 'Environments[0].Status' --output text)" = "Ready" ]; do
          echo 'waiting for environment to be ready...'
          sleep 30
        done
    
    - name: Deploy to Elastic Beanstalk
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      run: |
        zip -r deploy.zip * .[^.]*
        aws s3 cp deploy.zip s3://elasticbeanstalk-${{ secrets.AWS_REGION }}-${{ secrets.AWS_ACCOUNT_ID }}/deploy.zip
        aws elasticbeanstalk create-application-version --application-name BankApp --version-label $GITHUB_SHA --source-bundle S3Bucket="elasticbeanstalk-${{ secrets.AWS_REGION }}-${{ secrets.AWS_ACCOUNT_ID }}",S3Key="deploy.zip"
        aws elasticbeanstalk update-environment --application-name BankApp --environment-name your-environment-name --version-label $GITHUB_SHA
      working-directory: ./backend